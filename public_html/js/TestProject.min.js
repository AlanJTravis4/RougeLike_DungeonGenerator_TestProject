/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
function Coordinate(e,t){this.x=e,this.y=t}function Dimension(e,t){this.w=e,this.h=t}function getRandomInt(e,t){return Math.floor(Math.random()*(t-e+1))+e}function InputParameters(e,t,o,r){this.dw=e,this.dh=t,this.tw=o,this.th=o,this.dirtPercent=r}function generateDungeon(){var e=getInput()
if(e&&e instanceof InputParameters){var t=new Dungeon(e),o=new DungeonGenerator(t)
o.generate()
var r=new ItemGenerator(t)
r.generate()
var n=new EnemyGenerator(t)
n.generate(),displayDungeon(t)}}function displayDungeon(e){$("#displaySVG")[0].innerHTML=e.displayDungeonAsSVG()}function getInput(){var e=!0
$("#errorMessage")[0].innerHTML=""
var t=$("#svgWidth")[0].value?$("#svgWidth")[0].value:$("#svgWidth")[0].placeholder,o=$("#svgHeight")[0].value?$("#svgHeight")[0].value:$("#svgHeight")[0].placeholder,r=$("#tileWidth")[0].value?$("#tileWidth")[0].value:$("#tileWidth")[0].placeholder,n=$("#dirtPercent")[0].value?$("#dirtPercent")[0].value:$("#dirtPercent")[0].placeholder
return isPositiveInteger(t,99,800)?isPositiveInteger(o,99,800)?isPositiveInteger(r,9,100)?isPositiveInteger(n,65,100)||(e=!1,$("#errorMessage")[0].innerHTML="Error!  Dirt Percent must be a positive integer value, in the range (60..100).  Aborting"):(e=!1,$("#errorMessage")[0].innerHTML="Error!  Tile Width must be a positive integer value, in the range (10..100).  Aborting"):(e=!1,$("#errorMessage")[0].innerHTML="Error!  Dungeon Height must be a positive integer value, in the range (100..800).  Aborting"):(e=!1,$("#errorMessage")[0].innerHTML="Error!  Dungeon Width must be a positive integer value, in the range (100..800).  Aborting"),e?new InputParameters(t,o,r,n):null}function isPositiveInteger(e,t,o){var r=Math.floor(Number(e))
return String(r)===e&&r>t&&o>=r}function Dungeon(e){this.numTilesWide=e.tileWidthCount(),this.numTilesHigh=e.tileHeightCount(),this.tileWidthPx=e.tw,this.tileHeightPx=e.th,this.dirtPercent=e.dirtPercent,this.initializeDungeonGrid()}function Tile(e,t){this.gridChar=e,this.gridClass=t}function Environment(e,t){Tile.call(this,e,t)}function Rock(){Environment.call(this,"#","rock")}function DirtFloor(){Environment.call(this,".","dirtFloor")}function Door(){Environment.call(this,"+","door"),this.isOpen=!1}function Corridor(){Environment.call(this,"=","corridor")}function Item(e,t,o){Tile.call(this,t,o),this.desc=e}function TreasureChest(){Item.call(this,"A Treasure Chest","$","chest")}function LadderUp(){Item.call(this,"A Ladder leading Up",">","ladderUp")}function LadderDown(){Item.call(this,"A Ladder leading Down","<","ladderDown")}function Trap(e,t,o){Item.call(this,e,t,o),this.armed=!0,this.carryable=!1}function FirePit(e,t,o){Trap.call(this,"A Fire Pit which would most certainly kill","f","firePit"),this.armed=!0,this.carryable=!1}function BearTrap(e,t,o){Trap.call(this,"A Bear Trap... That would hurt","b","bearTrap"),this.setCarryable(!0)}function BeerTrap(e,t,o){Trap.call(this,"A Beer Trap... Hiccup... Drowning in beer might not be such a bad way to go.","r","beerTrap")}function Snare(e,t,o){Trap.call(this,"A small snare... could be helpful in catching lizards","s","snare"),this.setCarryable(!0),this.setArmed(!1)}function Enemy(e,t,o){Tile.call(this,t,o),this.desc=e}function Lizard(){Enemy.call(this,"A Lizard that looks like an easy kill","~","lizard")}function Troll(){Enemy.call(this,"A Troll that you might be able to kill","%","troll")}function Dragon(){Enemy.call(this,"A Dragon that will KILL you!","D","dragon")}function DungeonGenerator(e){var t=Math.floor(999999999*Math.random()%numberOfDungeonGenerators)
switch(t){case 0:this.generator=new LargeCavernNoDoorsOrCorridors(e)}}function BasicDungeonGenerator(e){this.dungeon=e,this.dungeonGrid=e.dungeonGrid[dungeonEnvironmentLayer],this.dirtFloorTileCount=0,this.foundDirtFloorTiles=[],this.connectedDirtFloorTiles=0}function LargeCavernNoDoorsOrCorridors(e){BasicDungeonGenerator.call(this,e)}function ItemGenerator(e){var t=Math.floor(999999999*Math.random()%numberOfItemGenerators)
switch(t){case 0:this.generator=new PoliteSmatteringOfItems(e)}}function BasicItemGenerator(e){this.dungeon=e,this.dungeonGrid=e.dungeonGrid[dungeonItemsLayer]}function PoliteSmatteringOfItems(e){BasicItemGenerator.call(this,e)}function EnemyGenerator(e){var t=Math.floor(999999999*Math.random()%numberOfItemGenerators)
switch(t){case 0:this.generator=new PoliteSmatteringOfEnemies(e)}}function BasicEnemyGenerator(e){this.dungeon=e,this.dungeonGrid=e.dungeonGrid[dungeonEnemyLayer]}function PoliteSmatteringOfEnemies(e){BasicEnemyGenerator.call(this,e)}InputParameters.prototype.tileWidthCount=function(){return Math.floor(this.dw/this.tw)},InputParameters.prototype.tileHeightCount=function(){return Math.floor(this.dh/this.th)},$("#submit").click(function(e){generateDungeon()}),DungeonGridDisplayLayers=3,dungeonEnvironmentLayer=0,dungeonItemsLayer=1,dungeonEnemyLayer=2,Dungeon.prototype.initializeDungeonGrid=function(){this.dungeonGrid=new Array(DungeonGridDisplayLayers)
for(var e=0;e<DungeonGridDisplayLayers;e++){this.dungeonGrid[e]=new Array(this.numTilesHigh)
for(var t=0;t<this.numTilesHigh;++t){this.dungeonGrid[e][t]=new Array(this.numTilesWide)
for(var o=0;o<this.numTilesWide;++o)e==dungeonEnvironmentLayer&&(this.dungeonGrid[e][t][o]=new Rock)}}},Dungeon.prototype.reInitializeDungeonGrid=function(e){for(var t=0;t<this.numTilesHigh;++t)for(var o=0;o<this.numTilesWide;++o)this.dungeonGrid[e][t][o]=new Rock},Dungeon.prototype.actualDungeonWidth=function(){return this.numTilesWide*this.tileWidthPx},Dungeon.prototype.actualDungeonHeight=function(){return this.numTilesHigh*this.tileHeightPx},Dungeon.prototype.getTileCoordinates=function(e,t){return new Coordinate(this.tileHeightPx*e,this.tileWidthPx*t)},Dungeon.prototype.getCharCoordinates=function(e,t){return new Coordinate(this.tileHeightPx*e,this.tileWidthPx*t+1*this.tileWidthPx)},Dungeon.prototype.getRandomLocation=function(e){var t=this.numTilesWide,o=this.numTilesHigh
e.x=getRandomInt(1,o-Math.floor(o/8)),e.y=getRandomInt(1,t-Math.floor(t/8))},Dungeon.prototype.getRandomSize=function(e){var t=this.numTilesWide,o=this.numTilesHigh
e.w=getRandomInt(2,Math.floor(t/10)),e.h=getRandomInt(2,Math.floor(o/10))},Dungeon.prototype.displayDungeonAsSVG=function(){for(var e,t,o='<svg width="'+this.actualDungeonWidth()+'" height="'+this.actualDungeonHeight()+'" style="-moz-box-sizing: border-box; box-sizing: content-box;">',r="<g>",n="<g>",i="<g>",a=0;a<DungeonGridDisplayLayers;a++)for(var s=0;s<this.dungeonGrid[a].length;++s)for(var d=0;d<this.dungeonGrid[a][s].length;++d)this.dungeonGrid[a][s][d]&&(e=this.getTileCoordinates(d,s),t=this.getCharCoordinates(d,s),r+='<rect x="'+e.x+'" y="'+e.y+'" width="'+this.tileWidthPx+'" height="'+this.tileHeightPx+'" class="'+this.dungeonGrid[a][s][d].gridClass+'"></rect><text x="'+t.x+'" y="'+t.y+'" dy="'+-1*this.tileWidthPx/4+'" dx="'+this.tileHeightPx/4+'" font-size="'+(this.tileHeightPx<=15?this.tileHeightPx-2:15)+'"" class="gridCharacter">'+this.dungeonGrid[a][s][d].gridChar+"</text>")
return o+=r+"</g>",o+=n+"</g>",o+=i+"</g>",o+="</svg>"},Environment.prototype=Object.create(Tile.prototype),Environment.prototype.constructor=Environment,Rock.prototype=Object.create(Environment.prototype),Rock.prototype.constructor=Rock,DirtFloor.prototype=Object.create(Environment.prototype),DirtFloor.prototype.constructor=DirtFloor,Door.prototype=Object.create(Environment.prototype),Door.prototype.constructor=Door,Door.prototype.openDoor=function(){this.isOpen=!0,this.gridChar="0"},Door.prototype.closeDoor=function(){this.isOpen=!0,this.gridChar="+"},Corridor.prototype=Object.create(Environment.prototype),Corridor.prototype.constructor=Corridor,Item.prototype=Object.create(Tile.prototype),Item.prototype.constructor=Item,TreasureChest.prototype=Object.create(Item.prototype),TreasureChest.prototype.constructor=TreasureChest,LadderUp.prototype=Object.create(Item.prototype),LadderUp.prototype.constructor=LadderUp,LadderDown.prototype=Object.create(Item.prototype),LadderDown.prototype.constructor=LadderDown,Trap.prototype=Object.create(Item.prototype),Trap.prototype.constructor=Trap,Trap.prototype.setArmed=function(e){this.armed=e},Trap.prototype.isArmed=function(){return this.armed},Trap.prototype.disarmTrap=function(){this.armed=!1},Trap.prototype.setCarryable=function(e){this.carryable=e},Trap.prototype.canCarry=function(){return carryable},FirePit.prototype=Object.create(Trap.prototype),FirePit.prototype.constructor=FirePit,BearTrap.prototype=Object.create(Trap.prototype),BearTrap.prototype.constructor=BearTrap,BeerTrap.prototype=Object.create(Trap.prototype),BeerTrap.prototype.constructor=BeerTrap,Snare.prototype=Object.create(Trap.prototype),Snare.prototype.constructor=Snare,Enemy.prototype=Object.create(Tile.prototype),Enemy.prototype.constructor=Enemy,Lizard.prototype=Object.create(Enemy.prototype),Lizard.prototype.constructor=Lizard,Troll.prototype=Object.create(Enemy.prototype),Troll.prototype.constructor=Troll,Dragon.prototype=Object.create(Enemy.prototype),Dragon.prototype.constructor=Dragon,numberOfDungeonGenerators=1,DungeonGenerator.prototype.generate=function(){this.generator.generate()},BasicDungeonGenerator.prototype.carveOutSquare=function(e,t){for(var o=e.x;o<e.x+t.h&&o<this.dungeon.numTilesHigh-1;o++)for(var r=e.y;r<e.y+t.w&&r<this.dungeon.numTilesWide-1;r++)delete this.dungeonGrid[o][r],this.dungeonGrid[o][r]=new DirtFloor},BasicDungeonGenerator.prototype.remainingRockPercentage=function(){for(var e=this.dungeon.numTilesHigh*this.dungeon.numTilesWide,t=0,o=0;o<this.dungeon.numTilesHigh;o++)for(var r=0;r<this.dungeon.numTilesWide;r++)this.dungeonGrid[o][r]instanceof DirtFloor&&t++
return this.dirtFloorTileCount=t,Math.floor(t/e*100)},BasicDungeonGenerator.prototype.isNewDirtTile=function(e,t){this.dungeonGrid[e][t]instanceof DirtFloor&&-1==this.foundDirtFloorTiles.indexOf(e+","+t)&&this.catalogConnectedTile(e,t)},BasicDungeonGenerator.prototype.catalogConnectedTile=function(e,t){this.connectedDirtFloorTiles++,this.foundDirtFloorTiles.push(e+","+t),this.findAllConnectedTiles(e,t)},BasicDungeonGenerator.prototype.findAllConnectedTiles=function(e,t){this.isNewDirtTile(e,t+1),this.isNewDirtTile(e,t-1),this.isNewDirtTile(e+1,t),this.isNewDirtTile(e-1,t)},LargeCavernNoDoorsOrCorridors.prototype=Object.create(BasicDungeonGenerator.prototype),LargeCavernNoDoorsOrCorridors.prototype.constructor=LargeCavernNoDoorsOrCorridors,LargeCavernNoDoorsOrCorridors.prototype.generate=function(){for(var e=42,t=!0;t;)this.carveRandomSquaresUntilDone(e),this.findOrphanedRooms(),this.connectedDirtFloorTiles!=this.dirtFloorTileCount?(this.foundDirtFloorTiles=[],this.connectedDirtFloorTiles=0):t=!1,e+=4,e>this.dungeon.dirtPercent&&(this.dungeon.reInitializeDungeonGrid(dungeonEnvironmentLayer),e=42,t=!0)
console.log(e)},LargeCavernNoDoorsOrCorridors.prototype.carveRandomSquaresUntilDone=function(e){for(var t=new Coordinate(0,0),o=new Dimension(0,0);this.remainingRockPercentage()<e;)this.dungeon.getRandomLocation(t),this.dungeon.getRandomSize(o),this.carveOutSquare(t,o)},LargeCavernNoDoorsOrCorridors.prototype.findOrphanedRooms=function(){for(var e=(new Coordinate(0,0),new Dimension(0,0),this.dungeon.numTilesWide,this.dungeon.numTilesHigh,0);e<this.dungeon.numTilesHigh;e++)for(var t=0;t<this.dungeon.numTilesWide;t++)if(this.dungeonGrid[e][t]instanceof DirtFloor)return void this.catalogConnectedTile(e,t)},numberOfItemGenerators=1,ItemGenerator.prototype.generate=function(){this.generator.generate()},BasicItemGenerator.prototype.findAGoodSpot=function(e){for(var t=!1;!t;)this.dungeon.getRandomLocation(e),this.dungeon.dungeonGrid[dungeonEnvironmentLayer][e.x][e.y]instanceof DirtFloor&&null==this.dungeon.dungeonGrid[dungeonItemsLayer][e.x][e.y]&&(t=!0)},BasicItemGenerator.prototype.pickARandomItem=function(){var e=getRandomInt(0,6)
switch(e){case 0:return new FirePit
case 1:return new BearTrap
case 2:return new BeerTrap
case 3:return new Snare
default:return new TreasureChest}},PoliteSmatteringOfItems.prototype=Object.create(BasicItemGenerator.prototype),PoliteSmatteringOfItems.prototype.constructor=PoliteSmatteringOfItems,PoliteSmatteringOfItems.prototype.generate=function(){var e=new Coordinate(0,0),t=Math.ceil(this.dungeon.numTilesHigh*this.dungeon.numTilesWide*.015)
this.findAGoodSpot(e),this.dungeonGrid[e.x][e.y]=new LadderUp,this.findAGoodSpot(e),this.dungeonGrid[e.x][e.y]=new LadderDown
for(var o=0;t>o;o++)this.findAGoodSpot(e),this.dungeonGrid[e.x][e.y]=this.pickARandomItem()},numberOfItemGenerators=1,EnemyGenerator.prototype.generate=function(){this.generator.generate()},BasicEnemyGenerator.prototype.findAGoodSpot=function(e){for(var t=!1;!t;)this.dungeon.getRandomLocation(e),this.dungeon.dungeonGrid[dungeonEnvironmentLayer][e.x][e.y]instanceof DirtFloor&&null==this.dungeon.dungeonGrid[dungeonItemsLayer][e.x][e.y]&&(t=!0)},BasicEnemyGenerator.prototype.pickARandomEnemy=function(){var e=getRandomInt(0,2)
switch(e){case 0:return new Troll
default:return new Lizard}},BasicEnemyGenerator.prototype.surroundDragonWithGold=function(e,t){console.log(e+"  "+t),this.testGoodSpotForGold(e-1,t-1),this.testGoodSpotForGold(e-1,t),this.testGoodSpotForGold(e-1,t+1),this.testGoodSpotForGold(e,t-1),this.testGoodSpotForGold(e,t),this.testGoodSpotForGold(e,t+1),this.testGoodSpotForGold(e+1,t-1),this.testGoodSpotForGold(e+1,t),this.testGoodSpotForGold(e+1,t+1)},BasicEnemyGenerator.prototype.testGoodSpotForGold=function(e,t){this.dungeon.dungeonGrid[dungeonEnvironmentLayer][e][t]instanceof DirtFloor&&null==this.dungeon.dungeonGrid[dungeonItemsLayer][e][t]&&(this.dungeon.dungeonGrid[dungeonItemsLayer][e][t]=new TreasureChest)},PoliteSmatteringOfEnemies.prototype=Object.create(BasicEnemyGenerator.prototype),PoliteSmatteringOfEnemies.prototype.constructor=PoliteSmatteringOfEnemies,PoliteSmatteringOfEnemies.prototype.generate=function(){var e=new Coordinate(0,0),t=Math.ceil(this.dungeon.numTilesHigh*this.dungeon.numTilesWide*.015)
this.findAGoodSpot(e),this.dungeonGrid[e.x][e.y]=new Dragon,this.surroundDragonWithGold(e.x,e.y)
for(var o=0;t>o;o++)this.findAGoodSpot(e),this.dungeonGrid[e.x][e.y]=this.pickARandomEnemy()}
